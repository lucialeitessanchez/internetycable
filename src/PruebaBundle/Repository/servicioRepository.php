<?php

namespace PruebaBundle\Repository;

use DateTime;
use Doctrine\ORM\EntityRepository;
use Symfony\Component\VarDumper\Cloner\Data;
use PruebaBundle\Form\Model\ServicioPendienteModel;
/**
 * servicioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class servicioRepository extends EntityRepository
{

    public function _findAllOrderedByNombre()
    {
        return $this->buildQuery()->orderBy('q.referencia','ASC');
    }

    public function serviciosPendiente(ServicioPendienteModel $servicioPendientes)
    {
        
        $em = $this->getEntityManager();


        $periodo = $servicioPendientes->getPeriodo();
        $fechaDesde = clone $periodo;
        $fechaHasta = clone $periodo;
        $fechaDesde->modify('first day of this month'); //hace desde el primer dia del mes que selecciono
        $fechaHasta->modify('last day of this month'); //hasta el ultimo del mes seleccionado


        $dql2 = ' SELECT s2.id '
                .' FROM PruebaBundle:servicio s2'
                .' JOIN s2.facturas f ' 
                .' JOIN f.expediente e ' 
                .' WHERE s2.estado = true '
                .'       AND e.fechaInicioGestion >= :desde '  // :desde es la definicon de la variable
                .' AND e.fechaInicioGestion <= :hasta';

        $dql = ' SELECT s '
                .' FROM PruebaBundle:servicio s'
                .' WHERE s.estado = true '
                .' AND s.id not in ('.$dql2.')' // la resta del total menos de los que tienen fecha iniciada
                ;


        //$query = $em->createQuery($dql);

        
        $query = $em->createQuery($dql)
                ->setParameter('desde',$fechaDesde) //definida aca 
                ->setParameter('hasta',$fechaHasta)
                ;

        return $query->getResult();

    }
}
